apiVersion: v1
kind: ConfigMap
data:
  SCALYR_K8S_CLUSTER_NAME: <your-cluster-name>

  # rate limiter settings
  # With these settings, assuming there are 1000 nodes, then with an
  # RPS_INIT value of 3,000 each node will send at most 3 requests
  # per second (RPS_INIT / NUM_AGENTS) to the K8S API.
  # Successful queries will cause the rate to increase up to 30,000 requests per second (RPS_MAX)
  # for the entire cluster, which equals up to 30 requests per second, per node.
  SCALYR_K8S_RATELIMIT_CLUSTER_NUM_AGENTS: "1000"
  SCALYR_K8S_RATELIMIT_CLUSTER_RPS_INIT: "3000"
  SCALYR_K8S_RATELIMIT_CLUSTER_RPS_MIN: "8"
  SCALYR_K8S_RATELIMIT_CLUSTER_RPS_MAX: "30000"

  # additional rate limiter settings
  SCALYR_K8S_RATELIMIT_CONSECUTIVE_INCREASE_THRESHOLD: "5"
  SCALYR_K8S_RATELIMIT_STRATEGY: "multiply"
  SCALYR_K8S_RATELIMIT_INCREASE_FACTOR: "2.0"
  SCALYR_K8S_RATELIMIT_BACKOFF_FACTOR: "0.5"
  SCALYR_K8S_RATELIMIT_MAX_CONCURRENCY: "1"

  # events and metrics
  SCALYR_K8S_EVENTS_DISABLE: "false"
  SCALYR_REPORT_CONTAINER_METRICS: "true"
  SCALYR_REPORT_K8S_METRICS: "true"

  # Uncomment if containerd is being used
  #SCALYR_K8S_CRI_QUERY_FILESYSTEM: "true"

  # settings for high log volume
  SCALYR_MAX_LINE_SIZE: "49900"
  SCALYR_MAX_ALLOWED_REQUEST_SIZE: "5500000"
  SCALYR_PIPELINE_THRESHOLD: "0.1"
  SCALYR_MIN_REQUEST_SPACING_INTERVAL: "0.5"
  SCALYR_MAX_REQUEST_SPACING_INTERVAL: "1.0"
  SCALYR_MAX_LOG_OFFSET_SIZE: "200000000"
  SCALYR_MAX_EXISTING_LOG_OFFSET_SIZE: "200000000"

  # Comment/uncomment the following line to disable/enable compression of request data.
  # Compressed data will use less outgoing bandwidth, but will increase CPU load of
  # individual agents
  SCALYR_COMPRESSION_TYPE: deflate

  # K8S cache config
  SCALYR_K8S_QUERY_TIMEOUT_SECS: "120"
  SCALYR_K8S_CACHE_EXPIRY_SECS: "60"

  # profiling information - enable for PoC only
  SCALYR_ENABLE_PROFILING: "true"
  SCALYR_PROFILE_DURATION_MINUTES: "2"
  SCALYR_MAX_PROFILE_INTERVAL_MINUTES: "60"
metadata:
  name: scalyr-config
  namespace: default
  
